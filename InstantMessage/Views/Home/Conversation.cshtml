@model InstantMessage.Models.User
@using InstantMessage.Models

@{
    ViewBag.Title = "Conversation";
}
<style>
    .flex-container {
            display: flex;
            flex-direction: column;
            width: 800px;
            height: 250px;
            background-color: lightgrey;
    }

    .flex-item {
            background-color: white;
            width: 400px;
            height: 30px;
            margin: 10px;
    }
    #conversation-content {
        background-color: white;
        width: 400px;
        height: 200px;
        margin: 10px
    }
</style>
<h2>Conversation</h2>

<input id="current-conversation" type="hidden"/>
<input id="UserID" type="hidden" />




<div class="container">
    <input type="button" id="conversations" value="Show Conversations" />
    <ul id="conversations"></ul>
</div>

<div class="container">
    <input type="button" id="display" value="Display Contacts"/>
    <ul id="contacts"></ul>
</div>

<div class="container-fluid">
    <input type="button" id="select" value="Select Contact" />
    <select id="contactselect">
    </select>
    <input type="button" id="startconversation" value="Start Conversation" />
</div>


<div class="flex-container">
    <div class="flex-item" id="contact-name">Conversation with: </div>
    <div class="flex-item" id="conversation-content">
            <input type="hidden" id="displayname" />
            <ul id="discussion"></ul>
    </div>
    <div class="flex-item" id="message-div">
        <input type="text" id="message" />
        <input type="button" id="sendmessage" value="Send" />
    </div>
    </div>





@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->

   
    
    <script>
        var chat = $.connection.chatHub;
        chat.client.display = function (contact) {
        };
        $.connection.hub.start()
            .done(
            $.connection.hub.logging = true,
            function () {
                console.log("success")
                chat.server.contacts();
                    }).fail(function () { alert("fail!") })


        $('#select').click(function () {
            chat.server.displayContacts()
                .done(function (contactList) {
                    for (var i = 0; i < contactList.length; i++) {
                        $('#contactselect').append('<option>'+ contactList[i]
                            + '</option>');
                    }
                })
            })


        $('#display').click(function () {
            chat.server.displayContacts()
                .done(function (contactList) {
                    for (var i = 0; i < contactList.length; i++) {
                        $('#contacts').append('<li>' + ' ' + contactList[i]
                            + '</li>');
                    }
                    $('<input type="checkbox" />').prependTo($("#contacts").children('li'));
                })
        })

        $('#startconversation').click(function () {
            $('#contact-name').html('')
            var value = $('#contactselect').find(":selected").text()
            $('#contact-name').append("Conversation with: " + value)
            chat.server.startConversation(value);
        })


        $(function () {
            chat.Client.conversationReference = function (conversationID) {
                $('#currentconversation').val(conversationID);
            }
        })


        $(function () {
            $('#sendmessage').click(function () {
                var message = $('#message').val();
                if (message.length > 0)
                {
                    chat.server.send($('#displayname').val(), message, $('#current-conversation').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                }
                
            });

        })
    </script>


<!--<script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
</script>
-->


    <!--
    <script>
      $(function () {
            var chatProxy = $.connection.chatHub;
            // Create a function that the hub can call to display contacts.
            chatProxy.Invoke("DisplayContacts") = function (contact) {
                alert(contact + "TEST CONTACT");
                $('#contacts').append('<li><strong>' + htmlEncode(contact)
                    + '</strong>: ' + '</li>');
            };
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
-->



}
